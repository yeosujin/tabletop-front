name: Table Top CI/CD with Docker
on:
  push:
    branches: [ "main" ]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Setup Node.js environment
      uses: actions/setup-node@v2.5.2
      with:
        node-version: lts/Hydrogen
        
    - uses: actions/checkout@v2
    - run: |
        touch ./.env
        echo "${{ secrets.ENV }}" > ./.env
        pwd
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      
    - name: Docker Hub Login
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}
    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.REPOSITORY_NAME }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
          
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Execute Remote SSH Commands Using SSH_PRIVATE_KEY
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            # 기존 컨테이너 중지 및 제거
            docker stop tabletop-frontend || true
            docker rm tabletop-frontend || true

            # Docker 네트워크 생성 (없는 경우)
            # docker network create tabletop-network || true

            # 새 이미지 pull
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.REPOSITORY_NAME }}

            # 네트워크 설정과 함께 새 컨테이너 실행
            docker run -d \
              --name tabletop-frontend \
              --network tabletop-network \
              -p 80:80 \
              ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.REPOSITORY_NAME }}

            # 시스템 정리
            docker system prune -f
